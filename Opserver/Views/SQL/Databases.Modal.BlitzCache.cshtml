@using StackExchange.Opserver.Data.SQL
@using StackExchange.Opserver.Views.SQL
@model DatabasesModel
@{
    Layout = "Databases.Modal.cshtml";
    var s = Model.Instance;
    var result = s.GetBlitzCacheInfo(Model.Database);
    var data = result.Data;
}
@section top {
     <span class="pull-right small">@Helpers.PollNow(result)</span> 
 } 
 @if (result.Data == null || !result.Successful) 
 { 
     <div class="alert alert-warning"> 
         <h5>There was an error fetching table info from @s.Name for @Model.Database</h5> 
        <p class="error-stack">@result.ErrorMessage</p> 
     </div> 
 }
else
{
    <div class="alert alert-dismissible alert-info" style="margin-bottom: 2px;">
        Blitz cache analysis
    </div>
    <table class="table table-striped table-hover text-nowrap table-super-condensed table-responsive js-database-indexes">
        <thead>
            <tr>
                <th></th>
                <th>Cost</th>
                <th>Created</th>
                <th>Last Executed</th>
                <th>No. Executes</th>
                <th>Executions/min</th>
                <th>Total CPU</th>
                <th>Total Reads</th>
                <th>Total Duration</th>
                <th>Warnings</th>
                <th>Query</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in data)
            {
            <tr class="js-next-collapsible">
                <td class="text-muted">
                </td>
                <td class="" data-val="@i.Cost">
                    @i.Cost
                </td>
               
                <td class="" data-val="@i.PlanCreationTime">
                    @i.PlanCreationTime
                </td>
                <td class="" data-val="@i.LastExecutionTime">
                    @i.LastExecutionTime
                </td>
                <td class="" data-val="@i.ExecutionCount">
                    @i.ExecutionCount
                </td>
                <td class="" data-val="@i.ExecutionsPerMinute">
                    @i.ExecutionsPerMinute
                </td>
                <td class="" data-val="@i.TotalCPU">
                    @i.TotalCPU
                </td>
                <td class="" data-val="@i.TotalReads">
                    @i.TotalReads
                </td>
                <td class="" data-val="@i.TotalDuration">
                    @i.TotalDuration
                </td>
                <td class="" data-val="@i.Warnings">
                    @(i.Warnings?.TruncateWithEllipsis(50))
                </td>
                <td class="">
                    @(i.QueryText?.TruncateWithEllipsis(50))
                </td>
            </tr>
             
                <tr class="tablesorter-childRow hidden"></tr>

                <tr class="tablesorter-childRow hidden"></tr>
            }
        </tbody>
        <tfoot>
             @if (!result.Data.Any())
             {
                 <tr>
                     <td colspan="8">
                         <div class="no-content">No blitz cache results</div>
                     </td>
                 </tr>
             }
             else
             {
                 <tr class="total-row">
                     <td colspan="8">
                         <b>Total</b> <span class="text-muted">(@result.Data.Count.Pluralize("result"))</span>
                     </td>
                 </tr>
             }
        </tfoot>
    </table>
    <script>
        $(function () {
            $('.js-database-indexes').tablesorter({
                headers: {
                    3: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    4: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    5: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    6: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    7: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    8: { sorter: 'dataVal', sortInitialOrder: 'desc' }
                }
            });
            Status.highlight();
        });
    </script>
}